{"version":3,"file":"static/js/8.3b822a85.chunk.js","mappings":"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","sources":["exercise/02.js","pokemon.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/jsx-runtime.js"],"sourcesContent":["// useCallback: custom hooks\n// http://localhost:3000/isolated/exercise/02.js\n\nimport * as React from 'react'\nimport {\n  fetchPokemon,\n  PokemonForm,\n  PokemonDataView,\n  PokemonInfoFallback,\n  PokemonErrorBoundary,\n} from '../pokemon'\n\n// üê® this is going to be our generic asyncReducer\nfunction pokemonInfoReducer(state, action) {\n  switch (action.type) {\n    case 'pending': {\n      // üê® replace \"pokemon\" with \"data\"\n      return {status: 'pending', pokemon: null, error: null}\n    }\n    case 'resolved': {\n      // üê® replace \"pokemon\" with \"data\" (in the action too!)\n      return {status: 'resolved', pokemon: action.pokemon, error: null}\n    }\n    case 'rejected': {\n      // üê® replace \"pokemon\" with \"data\"\n      return {status: 'rejected', pokemon: null, error: action.error}\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`)\n    }\n  }\n}\n\nfunction PokemonInfo({pokemonName}) {\n  // üê® move all the code between the lines into a new useAsync function.\n  // üí∞ look below to see how the useAsync hook is supposed to be called\n  // üí∞ If you want some help, here's the function signature (or delete this\n  // comment really quick if you don't want the spoiler)!\n  // function useAsync(asyncCallback, initialState, dependencies) {/* code in here */}\n\n  // -------------------------- start --------------------------\n\n  const [state, dispatch] = React.useReducer(pokemonInfoReducer, {\n    status: pokemonName ? 'pending' : 'idle',\n    // üê® this will need to be \"data\" instead of \"pokemon\"\n    pokemon: null,\n    error: null,\n  })\n\n  React.useEffect(() => {\n    // üí∞ this first early-exit bit is a little tricky, so let me give you a hint:\n    // const promise = asyncCallback()\n    // if (!promise) {\n    //   return\n    // }\n    // then you can dispatch and handle the promise etc...\n    if (!pokemonName) {\n      return\n    }\n    dispatch({type: 'pending'})\n    fetchPokemon(pokemonName).then(\n      pokemon => {\n        dispatch({type: 'resolved', pokemon})\n      },\n      error => {\n        dispatch({type: 'rejected', error})\n      },\n    )\n    // üê® you'll accept dependencies as an array and pass that here.\n    // üê® because of limitations with ESLint, you'll need to ignore\n    // the react-hooks/exhaustive-deps rule. We'll fix this in an extra credit.\n  }, [pokemonName])\n  // --------------------------- end ---------------------------\n\n  // üê® here's how you'll use the new useAsync hook you're writing:\n  // const state = useAsync(() => {\n  //   if (!pokemonName) {\n  //     return\n  //   }\n  //   return fetchPokemon(pokemonName)\n  // }, {/* initial state */}, [pokemonName])\n  // üê® this will change from \"pokemon\" to \"data\"\n  const {pokemon, status, error} = state\n\n  switch (status) {\n    case 'idle':\n      return <span>Submit a pokemon</span>\n    case 'pending':\n      return <PokemonInfoFallback name={pokemonName} />\n    case 'rejected':\n      throw error\n    case 'resolved':\n      return <PokemonDataView pokemon={pokemon} />\n    default:\n      throw new Error('This should be impossible')\n  }\n}\n\nfunction App() {\n  const [pokemonName, setPokemonName] = React.useState('')\n\n  function handleSubmit(newPokemonName) {\n    setPokemonName(newPokemonName)\n  }\n\n  function handleReset() {\n    setPokemonName('')\n  }\n\n  return (\n    <div className=\"pokemon-info-app\">\n      <PokemonForm pokemonName={pokemonName} onSubmit={handleSubmit} />\n      <hr />\n      <div className=\"pokemon-info\">\n        <PokemonErrorBoundary onReset={handleReset} resetKeys={[pokemonName]}>\n          <PokemonInfo pokemonName={pokemonName} />\n        </PokemonErrorBoundary>\n      </div>\n    </div>\n  )\n}\n\nfunction AppWithUnmountCheckbox() {\n  const [mountApp, setMountApp] = React.useState(true)\n  return (\n    <div>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={mountApp}\n          onChange={e => setMountApp(e.target.checked)}\n        />{' '}\n        Mount Component\n      </label>\n      <hr />\n      {mountApp ? <App /> : null}\n    </div>\n  )\n}\n\nexport default AppWithUnmountCheckbox\n","import * as React from 'react'\nimport {ErrorBoundary} from 'react-error-boundary'\n\nconst formatDate = date =>\n  `${date.getHours()}:${String(date.getMinutes()).padStart(2, '0')} ${String(\n    date.getSeconds(),\n  ).padStart(2, '0')}.${String(date.getMilliseconds()).padStart(3, '0')}`\n\n// the delay argument is for faking things out a bit\nfunction fetchPokemon(name, delay = 1500) {\n  const pokemonQuery = `\n    query PokemonInfo($name: String) {\n      pokemon(name: $name) {\n        id\n        number\n        name\n        image\n        attacks {\n          special {\n            name\n            type\n            damage\n          }\n        }\n      }\n    }\n  `\n\n  return window\n    .fetch('https://graphql-pokemon2.vercel.app/', {\n      // learn more about this API here: https://graphql-pokemon2.vercel.app/\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json;charset=UTF-8',\n        delay: delay,\n      },\n      body: JSON.stringify({\n        query: pokemonQuery,\n        variables: {name: name.toLowerCase()},\n      }),\n    })\n    .then(async response => {\n      const {data} = await response.json()\n      if (response.ok) {\n        const pokemon = data?.pokemon\n        if (pokemon) {\n          pokemon.fetchedAt = formatDate(new Date())\n          return pokemon\n        } else {\n          return Promise.reject(new Error(`No pokemon with the name \"${name}\"`))\n        }\n      } else {\n        // handle the graphql errors\n        const error = {\n          message: data?.errors?.map(e => e.message).join('\\n'),\n        }\n        return Promise.reject(error)\n      }\n    })\n}\n\nfunction PokemonInfoFallback({name}) {\n  const initialName = React.useRef(name).current\n  const fallbackPokemonData = {\n    name: initialName,\n    number: 'XXX',\n    image: '/img/pokemon/fallback-pokemon.jpg',\n    attacks: {\n      special: [\n        {name: 'Loading Attack 1', type: 'Type', damage: 'XX'},\n        {name: 'Loading Attack 2', type: 'Type', damage: 'XX'},\n      ],\n    },\n    fetchedAt: 'loading...',\n  }\n  return <PokemonDataView pokemon={fallbackPokemonData} />\n}\n\nfunction PokemonDataView({pokemon}) {\n  return (\n    <div>\n      <div className=\"pokemon-info__img-wrapper\">\n        <img src={pokemon.image} alt={pokemon.name} />\n      </div>\n      <section>\n        <h2>\n          {pokemon.name}\n          <sup>{pokemon.number}</sup>\n        </h2>\n      </section>\n      <section>\n        <ul>\n          {pokemon.attacks.special.map(attack => (\n            <li key={attack.name}>\n              <label>{attack.name}</label>:{' '}\n              <span>\n                {attack.damage} <small>({attack.type})</small>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </section>\n      <small className=\"pokemon-info__fetch-time\">{pokemon.fetchedAt}</small>\n    </div>\n  )\n}\n\nfunction PokemonForm({\n  pokemonName: externalPokemonName,\n  initialPokemonName = externalPokemonName || '',\n  onSubmit,\n}) {\n  const [pokemonName, setPokemonName] = React.useState(initialPokemonName)\n\n  // this is generally not a great idea. We're synchronizing state when it is\n  // normally better to derive it https://kentcdodds.com/blog/dont-sync-state-derive-it\n  // however, we're doing things this way to make it easier for the exercises\n  // to not have to worry about the logic for this PokemonForm component.\n  React.useEffect(() => {\n    // note that because it's a string value, if the externalPokemonName\n    // is the same as the one we're managing, this will not trigger a re-render\n    if (typeof externalPokemonName === 'string') {\n      setPokemonName(externalPokemonName)\n    }\n  }, [externalPokemonName])\n\n  function handleChange(e) {\n    setPokemonName(e.target.value)\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    onSubmit(pokemonName)\n  }\n\n  function handleSelect(newPokemonName) {\n    setPokemonName(newPokemonName)\n    onSubmit(newPokemonName)\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"pokemon-form\">\n      <label htmlFor=\"pokemonName-input\">Pokemon Name</label>\n      <small>\n        Try{' '}\n        <button\n          className=\"invisible-button\"\n          type=\"button\"\n          onClick={() => handleSelect('pikachu')}\n        >\n          \"pikachu\"\n        </button>\n        {', '}\n        <button\n          className=\"invisible-button\"\n          type=\"button\"\n          onClick={() => handleSelect('charizard')}\n        >\n          \"charizard\"\n        </button>\n        {', or '}\n        <button\n          className=\"invisible-button\"\n          type=\"button\"\n          onClick={() => handleSelect('mew')}\n        >\n          \"mew\"\n        </button>\n      </small>\n      <div>\n        <input\n          className=\"pokemonName-input\"\n          id=\"pokemonName-input\"\n          name=\"pokemonName\"\n          placeholder=\"Pokemon Name...\"\n          value={pokemonName}\n          onChange={handleChange}\n        />\n        <button type=\"submit\" disabled={!pokemonName.length}>\n          Submit\n        </button>\n      </div>\n    </form>\n  )\n}\n\nfunction ErrorFallback({error, resetErrorBoundary}) {\n  return (\n    <div role=\"alert\">\n      There was an error:{' '}\n      <pre style={{whiteSpace: 'normal'}}>{error.message}</pre>\n      <button onClick={resetErrorBoundary}>Try again</button>\n    </div>\n  )\n}\n\nfunction PokemonErrorBoundary(props) {\n  return <ErrorBoundary FallbackComponent={ErrorFallback} {...props} />\n}\n\nexport {\n  PokemonInfoFallback,\n  PokemonForm,\n  PokemonDataView,\n  fetchPokemon,\n  PokemonErrorBoundary,\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["pokemonInfoReducer","state","action","type","status","pokemon","error","Error","PokemonInfo","pokemonName","React","dispatch","fetchPokemon","then","name","App","setPokemonName","className","onSubmit","newPokemonName","onReset","resetKeys","mountApp","setMountApp","checked","onChange","e","target","formatDate","date","getHours","String","getMinutes","padStart","getSeconds","getMilliseconds","delay","pokemonQuery","window","fetch","method","headers","body","JSON","stringify","query","variables","toLowerCase","response","json","data","ok","fetchedAt","Date","Promise","reject","message","errors","map","join","PokemonInfoFallback","fallbackPokemonData","current","number","image","attacks","special","damage","PokemonDataView","src","alt","attack","PokemonForm","externalPokemonName","initialPokemonName","handleSelect","preventDefault","htmlFor","onClick","id","placeholder","value","disabled","length","ErrorFallback","resetErrorBoundary","role","style","whiteSpace","PokemonErrorBoundary","props","ErrorBoundary","FallbackComponent","f","require","k","Symbol","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","h","call","defaultProps","$$typeof","_owner","exports","Fragment","jsx","jsxs","module"],"sourceRoot":""}