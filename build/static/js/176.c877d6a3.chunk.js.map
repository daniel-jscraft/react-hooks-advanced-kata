{"version":3,"file":"static/js/176.c877d6a3.chunk.js","mappings":";oLAMA,SAASA,EAAaC,EAAOC,GAC3B,IAAOC,EAAcD,EAAdC,KAAMC,EAAQF,EAARE,KACb,GACO,cADCD,EAEJ,OAAO,kBACFF,GADL,IAEEI,MAAOJ,EAAMI,MAAQD,IAIvB,MAAM,IAAIE,MAAJ,mCAAsCH,IAKlD,SAASI,EAAT,GAAgD,IAAD,IAA7BC,aAAAA,OAA6B,MAAd,EAAc,MAAXJ,KAAAA,OAAW,MAAJ,EAAI,EAC7C,EAA0BK,EAAAA,WAAiBT,EAAc,CACvDK,MAAOG,IADT,eAAOP,EAAP,KAAcS,EAAd,KAGOL,EAASJ,EAATI,MAEP,OAAO,mBAAQM,QADG,kBAAMD,EAAS,CAACP,KAAM,YAAaC,KAAAA,KAC9C,SAA6BC,IAOtC,UAJA,WACE,OAAO,SAACE,EAAD,2BCtBI,IAAIK,EAAEC,EAAQ,MAASC,EAAEC,OAAM,IAAK,iBAAiBC,EAAED,OAAM,IAAK,kBAAkBE,EAAEC,OAAOC,UAAUC,eAAeC,EAAET,EAAEU,mDAAmDC,kBAAkBC,EAAE,CAACC,KAAI,EAAGC,KAAI,EAAGC,QAAO,EAAGC,UAAS,GAChP,SAASC,EAAEC,EAAEC,EAAEC,GAAG,IAAIC,EAAEC,EAAE,GAAGC,EAAE,KAAKC,EAAE,KAAiF,IAAIH,UAAhF,IAASD,IAAIG,EAAE,GAAGH,QAAG,IAASD,EAAEN,MAAMU,EAAE,GAAGJ,EAAEN,UAAK,IAASM,EAAEL,MAAMU,EAAEL,EAAEL,KAAcK,EAAEd,EAAEoB,KAAKN,EAAEE,KAAKT,EAAEJ,eAAea,KAAKC,EAAED,GAAGF,EAAEE,IAAI,GAAGH,GAAGA,EAAEQ,aAAa,IAAIL,KAAKF,EAAED,EAAEQ,kBAAe,IAASJ,EAAED,KAAKC,EAAED,GAAGF,EAAEE,IAAI,MAAM,CAACM,SAASzB,EAAEX,KAAK2B,EAAEL,IAAIU,EAAET,IAAIU,EAAEI,MAAMN,EAAEO,OAAOpB,EAAEqB,SAASC,EAAQC,SAAS5B,EAAE2B,EAAQE,IAAIhB,EAAEc,EAAQG,KAAKjB,wBCPxWkB,EAAOJ,QAAU,EAAjBI","sources":["final/01.extra-4.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/jsx-runtime.js"],"sourcesContent":["// useReducer: simple Counter\n// ðŸ’¯ traditional dispatch object with a type and switch statement\n// http://localhost:3000/isolated/final/01.extra-4.js\n\nimport * as React from 'react'\n\nfunction countReducer(state, action) {\n  const {type, step} = action\n  switch (type) {\n    case 'increment': {\n      return {\n        ...state,\n        count: state.count + step,\n      }\n    }\n    default: {\n      throw new Error(`Unsupported action type: ${type}`)\n    }\n  }\n}\n\nfunction Counter({initialCount = 0, step = 1}) {\n  const [state, dispatch] = React.useReducer(countReducer, {\n    count: initialCount,\n  })\n  const {count} = state\n  const increment = () => dispatch({type: 'increment', step})\n  return <button onClick={increment}>{count}</button>\n}\n\nfunction App() {\n  return <Counter />\n}\n\nexport default App\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["countReducer","state","action","type","step","count","Error","Counter","initialCount","React","dispatch","onClick","f","require","k","Symbol","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","props","_owner","current","exports","Fragment","jsx","jsxs","module"],"sourceRoot":""}