{"version":3,"file":"static/js/518.38618b9a.chunk.js","mappings":";oLAKMA,EAAeC,EAAAA,gBAErB,SAASC,EAAcC,GACrB,MAA0BF,EAAAA,SAAe,GAAzC,eACMG,EAAQ,CADd,WAIA,OAAO,SAACJ,EAAaK,UAAd,QAAuBD,MAAOA,GAAWD,IAGlD,SAASG,IACP,MAAgBL,EAAAA,WAAiBD,GAA1BO,GAAP,eACA,OAAO,wDAA8BA,KAGvC,SAASC,IACP,MAAqBP,EAAAA,WAAiBD,GAA7BS,GAAT,eAEA,OAAO,mBAAQC,QADG,kBAAMD,GAAS,SAAAE,GAAC,OAAIA,EAAI,MACnC,6BAcT,UAXA,WACE,OACE,0BACE,UAACT,EAAD,YACE,SAACI,EAAD,KACA,SAACE,EAAD,gCCtBK,IAAII,EAAEC,EAAQ,MAASC,EAAEC,OAAM,IAAK,iBAAiBC,EAAED,OAAM,IAAK,kBAAkBE,EAAEC,OAAOC,UAAUC,eAAeC,EAAET,EAAEU,mDAAmDC,kBAAkBC,EAAE,CAACC,KAAI,EAAGC,KAAI,EAAGC,QAAO,EAAGC,UAAS,GAChP,SAASC,EAAElB,EAAEmB,EAAEC,GAAG,IAAIC,EAAEC,EAAE,GAAGC,EAAE,KAAKC,EAAE,KAAiF,IAAIH,UAAhF,IAASD,IAAIG,EAAE,GAAGH,QAAG,IAASD,EAAEL,MAAMS,EAAE,GAAGJ,EAAEL,UAAK,IAASK,EAAEJ,MAAMS,EAAEL,EAAEJ,KAAcI,EAAEb,EAAEmB,KAAKN,EAAEE,KAAKR,EAAEJ,eAAeY,KAAKC,EAAED,GAAGF,EAAEE,IAAI,GAAGrB,GAAGA,EAAE0B,aAAa,IAAIL,KAAKF,EAAEnB,EAAE0B,kBAAe,IAASJ,EAAED,KAAKC,EAAED,GAAGF,EAAEE,IAAI,MAAM,CAACM,SAASxB,EAAEyB,KAAK5B,EAAEc,IAAIS,EAAER,IAAIS,EAAEhC,MAAM8B,EAAEO,OAAOnB,EAAEoB,SAASC,EAAQC,SAAS3B,EAAE0B,EAAQE,IAAIf,EAAEa,EAAQG,KAAKhB,wBCPxWiB,EAAOJ,QAAU,EAAjBI","sources":["final/03.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/jsx-runtime.js"],"sourcesContent":["// useContext: simple Counter\n// http://localhost:3000/isolated/final/03.js\n\nimport * as React from 'react'\n\nconst CountContext = React.createContext()\n\nfunction CountProvider(props) {\n  const [count, setCount] = React.useState(0)\n  const value = [count, setCount]\n  // could also do it like this:\n  // const value = React.useState(0)\n  return <CountContext.Provider value={value} {...props} />\n}\n\nfunction CountDisplay() {\n  const [count] = React.useContext(CountContext)\n  return <div>{`The current count is ${count}`}</div>\n}\n\nfunction Counter() {\n  const [, setCount] = React.useContext(CountContext)\n  const increment = () => setCount(c => c + 1)\n  return <button onClick={increment}>Increment count</button>\n}\n\nfunction App() {\n  return (\n    <div>\n      <CountProvider>\n        <CountDisplay />\n        <Counter />\n      </CountProvider>\n    </div>\n  )\n}\n\nexport default App\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["CountContext","React","CountProvider","props","value","Provider","CountDisplay","count","Counter","setCount","onClick","c","f","require","k","Symbol","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","a","g","b","d","e","h","call","defaultProps","$$typeof","type","_owner","current","exports","Fragment","jsx","jsxs","module"],"sourceRoot":""}